/**************************************************************** 
 * Description: divide the cards
 * Author: Alex Li
 * Date: 2023-07-27 21:37:25
 * LastEditTime: 2023-07-27 21:53:11
****************************************************************/
#include <iostream>
using namespace std;

int main(){
    int n,m,j,a[100];
    int ave=0, step=0;
    cin>>n;
    for (int i = 1; i <=n; i++){    //读入各堆牌张数，
        cin>>a[i];
        ave+=a[i];
    }
    ave/=n;                        //求总张数平均值ave
    for (int i = 1; i <=n; i++) a[i]-=ave; //每堆牌的张数减平均数
    m=1,j=n;
    while (a[m]==0 && m<n)m++;      //过滤左边的0
    while(a[m]==0 && j>1) j--;      //过滤右边的0
    while(m<j){
        a[m+1]+=a[m];               //将第i堆牌移到第i+1堆中去,如果i堆是负数，哪就从第i+1取牌，可以是一次若干张
        a[m]=0;                     //第i堆牌移走后变为0
        step++;                     //移牌步数计数
        m++;                        //对下一堆牌进行循环操作
        while (a[m]==0 && m<j)m++;  //过滤移牌过程中产生的0
    }
    cout<<step;    
}

/*
2. 均分纸牌
有n堆纸牌，编号分别为1,2,3….n。每堆上有若干张，但纸牌总数必为n的倍数。可以在任一堆上取若干张纸牌，然后移动。移牌规则为：在编号为1的堆上取的纸牌，只能移到编号 为2的堆上；在编号为n的堆上取的纸牌，只能移到编号为n-1的堆上；其他堆上取的纸牌，可以移到相邻左边或右边的堆上。
现在要求找出一种移动方法，用最少的移动次数使每堆上纸牌数都一样多。

*/